
function getDateFormat(date, mode) {
  if (mode == "hours") {
    return date.toLocaleString("fr-FR", {
      weekday: "short",
      day: "numeric",
      month: "numeric",
      hour: "numeric"
    })
  } else if (mode == "days") {
    return date.toLocaleString("fr-FR", {
      weekday: "short",
      day: "numeric",
      month: "numeric",
      year: "numeric"
    })
  } else {
    return date.toLocaleString("fr-FR", {
      month: "numeric",
      day: "numeric",
      year: "numeric"
    })
  }
}

function hourFormat(date) {
  return date.toLocaleString("fr-FR", {
    weekday: "short",
    day: "numeric",
    month: "numeric"
  })
}
function dayFormat(date) {
  return date.toLocaleString("fr-FR", {
    weekday: "short",
    day: "numeric",
    month: "numeric"
  })
}
function yearFormat(date) {
  return date.toLocaleString("fr-FR", {
    day: "numeric",
    month: "numeric",
    year: "numeric"

  })
}
function convert_data(data, isDateObj) {
  const d = []
  for (let i = 1; i < data.length; i++) {
    const line = {}
    for (let y = 0; y < data[0].length; y++) {
      if (y == 0) {
        if (isDateObj) {
          line[data[0][y]] = new Date(data[i][y])
        } else {
          line[data[0][y]] = data[i][y]
        }
      } else {
        line[data[0][y]] = data[i][y]
      }
    }
    d.push(line)
  }
  return d
}
function convert_data_to_bar(data) {
  // [[A0,B0,C0], [A1, B1; C1]] => [{name: B0, values(x: 0, y:B1)}]

  const dt = []
  var headers = []
  for (let i = 1; i < data[0].length; i++) {
    // titles
    const obj = {
      name: data[0][i],
      values: []
    }
    const values = []
    for (let y = 1; y < data.length; y++) {
      const item = {}
      item.x = y - 1
      item.y = data[y][i]
      values.push(item)
    }
    obj.values = values
    dt.push(obj)
  }
  for (let i = 1; i < data.length; i++) {
    headers.push(data[i][0])
  }
  return { headers: headers, data: dt }

}
function createBarChart(_selector, _data, _chartSize) {
  const chartSize = {
    width: _chartSize.width - _chartSize.ml - _chartSize.mr,
    height: _chartSize.height - _chartSize.mt - _chartSize.mb,
    mb: _chartSize.mb,
    mt: _chartSize.mt,
    mr: _chartSize.mr,
    ml: _chartSize.ml
  }
  const selector = "#" + _selector
  const uniqueID = _selector + "-"

  var stack = d3.layout.stack()
    .values(function (d) { return d.values })

  var dt = convert_data_to_bar(_data)
  var n = dt.data.length // number of layers
  var m = dt.headers.length// number of samples per layer
  var data = stack(dt.data)

  var color = d3.scale.category10()

  var mx = m
  var my = d3.max(data, function (d) {
    return d3.max(d.values, function (d) {
      console.log(d)
      return d.y0 + d.y
    })
  })
  var mz = d3.max(data, function (d) {
    return d3.max(d.values, function (d) {
      return d.y
    })
  })
  var x = function (d) { return d.x * chartSize.width / mx }
  var y0 = function (d) {
    console.log(my)
    return chartSize.height - d.y0 * chartSize.height / my
  }
  var y1 = function (d) { return chartSize.height - (d.y + d.y0) * chartSize.height / my }
  var y2 = function (d) { return d.y * chartSize.height / mz } // or `my` to not rescale

  var linearScale = d3.scale.linear()
    .domain([0, 6])
    .range([0, chartSize.width - chartSize.mr]);


  var vis = d3.select(selector)
    .append("svg:svg")
    .attr("class", "chart")
    .attr("viewBox", [0, 0, chartSize.width + chartSize.mr + chartSize.ml, chartSize.height + chartSize.mt + chartSize.mb])


  var legend = vis.selectAll("g")
    .data(data)
    .enter()
    .append("g")
    .attr("class", "legend")

  legend.append("rect")
    .attr("x", chartSize.width - 20)
    .attr("y", function (d, i) {
      return i * 20
    })
    .attr("width", 10)
    .attr("height", 10)
    .style("fill", function (d, i) {
      return color(i)
    })

  legend.append("text")
    .attr("x", chartSize.width - 8)
    .attr("y", function (d, i) {
      return (i * 20) + 9
    })
    .text(function (d) {
      return d.name
    })

  var layers = vis.selectAll("g.layer")
    .data(data)
    .enter().append("svg:g")
    .style("fill", function (d, i) { return color(i / (n - 1)) })
    .attr("class", "layer")

  var bars = layers.selectAll("g.bar")
    .data(function (d) {
      // console.log(d);
      return d.values
    })
    .enter()
    .append("svg:g")
    .attr("class", "bar")
    .attr("transform", function (d) {
      return "translate(" + x(d) + "," + chartSize.mt + ")"
    })

  var bar_rect = bars.append("svg:rect")
    .attr("width", x({ x: 0.9 }))
    .attr("x", 0)
    .attr("y", chartSize.height)
    .attr("height", 0)

  bar_rect.transition()
    .delay(function (d, i) {
      return i * 10
    })
    .attr("y", y1)
    .attr("height", function (d) { return y0(d) - y1(d) })

  var labels = vis.selectAll("text.label")
    .data(dt.headers)
    .enter().append("svg:text")
    .attr("class", "label")
    .attr("x", function (d, i) {
      return i * chartSize.width / mx
    })
    .attr("y", chartSize.height + chartSize.mt + 10)
    .attr("dx", x({ x: 0.45 }))
    .attr("dy", ".71em")
    .attr("text-anchor", "middle")
    .text(function (d, i) { return d })

  vis.append("svg:line")
    .attr("class", "line")
    .attr("x1", 0)
    .attr("x2", chartSize.width - x({ x: 0.1 }))
    .attr("y1", chartSize.height + chartSize.mt)
    .attr("y2", chartSize.height + chartSize.mt)

  function transitionGroup() {
    var group = d3.selectAll(selector)

    group.select("#" + uniqueID + "group")
      .attr("class", "first active")

    group.select("#" + uniqueID + "stack")
      .attr("class", "last")

    group.selectAll("g.layer rect")
      .transition()
      .duration(500)
      .delay(function (d, i) { return (i % m) * 10 })
      .attr("x", function (d, i) { return x({ x: 0.9 * ~~(i / m) / n }) })
      .attr("width", x({ x: 0.9 / n }))
      .each("end", transitionEnd)

    function transitionEnd() {
      d3.select(this)
        .transition()
        .duration(500)
        .attr("y", function (d) { return chartSize.height - y2(d) })
        .attr("height", y2)
    }
  }

  function transitionStack() {
    var stack = d3.select(selector)

    stack.select("#" + uniqueID + "group")
      .attr("class", "first")

    stack.select("#" + uniqueID + "stack")
      .attr("class", "last active")

    stack.selectAll("g.layer rect")
      .transition()
      .duration(500)
      .delay(function (d, i) { return (i % m) * 10 })
      .attr("y", y1)
      .attr("height", function (d) { return y0(d) - y1(d) })
      .each("end", transitionEnd)

    function transitionEnd() {
      d3.select(this)
        .transition()
        .duration(500)
        .attr("x", 0)
        .attr("width", x({ x: 0.9 }))
    }


  }

  window.addEventListener(uniqueID + "click", function (e) {
    console.log(e.detail.value)
    if (e.detail.value) {
      transitionStack()
    } else {
      transitionGroup()
    }
  })

  transitionGroup();
}

/*
  Create a multiline chart with mouse hover.
  selector: the id of the chart container
  data: data in format [[columnA,columnB],[A0,B0], [A1, B1], ..]
  dayTicks: spacing for xAxis
  dateFormatType: display hours, days or simple date => "hours", "days", nul
  chartSize: the size of the chart in obj format with params: width height, mt,mr,mb,ml
*/
function createLineChart(_selector, _data, dateFormat, hoverFormatType, xAxisName, yAxisName, _chartSize) {
  var data = convert_data(_data, true)
  const selector = "#" + _selector
  const uniqueClass = _selector + "-"
  const chartSize = {
    width: _chartSize.width - _chartSize.ml - _chartSize.mr,
    height: _chartSize.height - _chartSize.mt - _chartSize.mb,
    mb: _chartSize.mb,
    mt: _chartSize.mt,
    mr: _chartSize.mr,
    ml: _chartSize.ml
  }


  var x = d3.time.scale()
    .range([0, chartSize.width])

  var y = d3.scale.linear()
    .range([chartSize.height, 0])

  var color = d3.scale.category10()

  // Gestion de l'axe du bas en visuel
  var xAxis = d3.svg.axis()
    .scale(x)
    .tickFormat(dateFormat)
    .orient("bottom")

  if (hoverFormatType == "hours") {
    xAxis.ticks(d3.time.day, 1)
  }

  var yAxis = d3.svg.axis()
    .scale(y)
    .orient("left")

  var line = d3.svg.line()
    .interpolate("basis")
    .x(function (d) {
      return x(d.date)
    })
    .y(function (d) {
      return y(d.popularity)
    })


  var svg = d3.select(selector).append("svg")
    .attr("class", "chart")
    .attr("viewBox", "0 0 " + (chartSize.width + chartSize.ml + chartSize.mr) + " " + (chartSize.height + chartSize.mt + chartSize.mb))
    .append("g")
    .attr("transform", "translate(" + chartSize.ml + "," + chartSize.mt + ")")

  color.domain(d3.keys(data[0]).filter(function (key) {
    return key !== "date"
  }))

  var practitioners = color.domain().map(function (name) {
    return {
      name: name,
      values: data.map(function (d) {
        return {
          date: d.date,
          popularity: +d[name]
        }
      })
    }
  })


  x.domain(d3.extent(data, function (d) {
    return d.date
  }))

  y.domain([
    d3.min(practitioners, function (c) {
      return d3.min(c.values, function (v) {
        return v.popularity
      })
    }),
    d3.max(practitioners, function (c) {
      return d3.max(c.values, function (v) {
        return v.popularity
      })
    })
  ])

  var legend = svg.selectAll("g")
    .data(practitioners)
    .enter()
    .append("g")
    .attr("class", "legend")

  legend.append("rect")
    .attr("x", chartSize.width - 20)
    .attr("y", function (d, i) {
      return i * 20
    })
    .attr("width", 10)
    .attr("height", 10)
    .style("fill", function (d) {
      return color(d.name)
    })

  legend.append("text")
    .attr("x", chartSize.width - 8)
    .attr("y", function (d, i) {
      return (i * 20) + 9
    })
    .text(function (d) {
      return d.name
    })

  svg.append("g")
    .attr("class", "x axis")
    .attr("transform", "translate(0," + chartSize.height + ")")
    .call(xAxis)

  svg.append("g")
    .attr("class", "y axis")
    .call(yAxis)
    .append("text")
    .attr("transform", "rotate(-90)")
    .attr("y", 6)
    .attr("dy", ".71em")
    .style("text-anchor", "end")
    .text(yAxisName)

  var practitioner = svg.selectAll(".practitioner")
    .data(practitioners)
    .enter().append("g")
    .attr("class", "practitioner")

  practitioner.append("path")
    .attr("class", uniqueClass + "line line")
    .attr("d", function (d) {
      return line(d.values)
    })
    .style("stroke", function (d) {
      return color(d.name)
    })

  practitioner.append("text")
    .datum(function (d) {
      return {
        name: d.name,
        value: d.values[d.values.length - 1]
      }
    })
    .attr("transform", function (d) {
      return "translate(" + x(d.value.date) + "," + y(d.value.popularity) + ")"
    })
    .attr("x", 3)
    .attr("dy", ".35em")
    .text(function (d) {
      return d.name
    })

  var mouseG = svg.append("g")
    .attr("class", uniqueClass + "mouse-over-effects")

  mouseG.append("path") // this is the black vertical line to follow mouse
    .attr("class", uniqueClass + "mouse-line")
    .style("stroke", "black")
    .style("stroke-width", "1px")
    .style("opapractitioner", "0")

  var lines = document.getElementsByClassName(uniqueClass + "line")

  // On ajoute le texte flottant pour la date
  mouseG.append("text").attr("class", uniqueClass + "line-hover-date")
    .attr("text-anchor", "middle")
    .attr("font-size", 12)

  mouseG.select(uniqueClass + "line-hover-date")
    .append("text")
    .attr("text-anchor", "middle")
    .attr("font-size", 12)


  var mousePerLine = mouseG.selectAll("." + uniqueClass + "mouse-per-line")
    .data(practitioners)
    .enter()
    .append("g")
    .attr("class", uniqueClass + "mouse-per-line")

  mousePerLine.append("circle")
    .attr("r", 7)
    .style("stroke", function (d) {
      return color(d.name)
    })
    .style("fill", "none")
    .style("stroke-width", "2px")
    .style("opapractitioner", "0")

  mousePerLine.append("text")
    .attr("transform", "translate(10,3)")

  mouseG.append("svg:rect") // append a rect to catch mouse movements on canvas
    .attr("width", chartSize.width) // can't catch mouse events on a g element
    .attr("height", chartSize.height)
    .attr("fill", "none")
    .attr("pointer-events", "all")
    .on("mouseout", function () { // on mouse out hide line, circles and text
      d3.select("." + uniqueClass + "mouse-line")
        .style("opapractitioner", "0")
      d3.selectAll("." + uniqueClass + "mouse-per-line" + " circle")
        .style("opapractitioner", "0")
      d3.selectAll(".mouse-per-line text")
        .style("opapractitioner", "0")
    })
    .on("mouseover", function () { // on mouse in show line, circles and text
      d3.select("." + uniqueClass + "mouse-line")
        .style("opapractitioner", "1")
      d3.selectAll("." + uniqueClass + "mouse-per-line" + " circle")
        .style("opapractitioner", "1")
      d3.selectAll(".mouse-per-line text")
        .style("opapractitioner", "1")
    })
    .on("mousemove", mousemove)// mouse moving over canvas


  const bisectDate = d3.bisector((d) => d.date).left

  function mousemove() {
    var mouse = d3.mouse(this)
    d3.select("." + uniqueClass + "mouse-line")
      .attr("d", function () {
        var d = "M" + mouse[0] + "," + chartSize.height
        d += " " + mouse[0] + "," + 0
        return d
      })

    var x0 = x.invert(mouse[0])
    const idx = bisectDate(data, x0, 1)
    const d0 = data[idx - 1]
    const d1 = data[idx]
    const d = x0 - d0.date > d1.date - x0 ? d1 : d0

    d3.select("." + uniqueClass + "line-hover-date")
      .attr("transform",
        "translate(" + x(d.date) + "," + (chartSize.height - 15 + chartSize.mb) + ")")
      .text(getDateFormat(d.date, hoverFormatType))

    d3.selectAll("." + uniqueClass + "mouse-per-line")
      .attr("transform", function (d, i) {
        var beginning = 0
        var end = lines[i].getTotalLength()
        var target = null

        while (true) {
          target = Math.floor((beginning + end) / 2)
          pos = lines[i].getPointAtLength(target)
          if ((target === end || target === beginning) && pos.x !== mouse[0]) {
            break
          }
          if (pos.x > mouse[0]) end = target
          else if (pos.x < mouse[0]) beginning = target
          else break // position found
        }

        d3.select(this).select("text")
          .text(y.invert(pos.y).toFixed(2))

        return "translate(" + mouse[0] + "," + pos.y + ")"
      })
  }
}


const chartSize = {
  width: 900,
  height: 500,
  mt: 50,
  mr: 50,
  mb: 50,
  ml: 50
}

const article_data = {
  days7_phys: [[
    "date",
    "ostéopathe",
    "kiné"
  ],
  [
    "2020-10-04T14:00:00",
    21.0,
    14.0
  ],
  [
    "2020-10-04T15:00:00",
    22.0,
    16.0
  ],
  [
    "2020-10-04T16:00:00",
    25.0,
    17.0
  ],
  [
    "2020-10-04T17:00:00",
    26.0,
    17.0
  ],
  [
    "2020-10-04T18:00:00",
    24.0,
    16.0
  ],
  [
    "2020-10-04T19:00:00",
    25.0,
    15.0
  ],
  [
    "2020-10-04T20:00:00",
    22.0,
    14.0
  ],
  [
    "2020-10-04T21:00:00",
    27.0,
    15.0
  ],
  [
    "2020-10-04T22:00:00",
    23.0,
    16.0
  ],
  [
    "2020-10-04T23:00:00",
    32.0,
    18.0
  ],
  [
    "2020-10-05T00:00:00",
    26.0,
    18.0
  ],
  [
    "2020-10-05T01:00:00",
    22.0,
    16.0
  ],
  [
    "2020-10-05T02:00:00",
    24.0,
    15.0
  ],
  [
    "2020-10-05T03:00:00",
    24.0,
    19.0
  ],
  [
    "2020-10-05T04:00:00",
    31.0,
    15.0
  ],
  [
    "2020-10-05T05:00:00",
    35.0,
    16.0
  ],
  [
    "2020-10-05T06:00:00",
    42.0,
    12.0
  ],
  [
    "2020-10-05T07:00:00",
    49.0,
    23.0
  ],
  [
    "2020-10-05T08:00:00",
    94.0,
    53.0
  ],
  [
    "2020-10-05T09:00:00",
    100.0,
    72.0
  ],
  [
    "2020-10-05T10:00:00",
    82.0,
    74.0
  ],
  [
    "2020-10-05T11:00:00",
    73.0,
    67.0
  ],
  [
    "2020-10-05T12:00:00",
    55.0,
    44.0
  ],
  [
    "2020-10-05T13:00:00",
    57.0,
    50.0
  ],
  [
    "2020-10-05T14:00:00",
    60.0,
    58.0
  ],
  [
    "2020-10-05T15:00:00",
    58.0,
    62.0
  ],
  [
    "2020-10-05T16:00:00",
    54.0,
    61.0
  ],
  [
    "2020-10-05T17:00:00",
    52.0,
    55.0
  ],
  [
    "2020-10-05T18:00:00",
    40.0,
    40.0
  ],
  [
    "2020-10-05T19:00:00",
    28.0,
    26.0
  ],
  [
    "2020-10-05T20:00:00",
    27.0,
    19.0
  ],
  [
    "2020-10-05T21:00:00",
    30.0,
    21.0
  ],
  [
    "2020-10-05T22:00:00",
    29.0,
    20.0
  ],
  [
    "2020-10-05T23:00:00",
    29.0,
    19.0
  ],
  [
    "2020-10-06T00:00:00",
    27.0,
    20.0
  ],
  [
    "2020-10-06T01:00:00",
    25.0,
    18.0
  ],
  [
    "2020-10-06T02:00:00",
    19.0,
    19.0
  ],
  [
    "2020-10-06T03:00:00",
    30.0,
    14.0
  ],
  [
    "2020-10-06T04:00:00",
    34.0,
    9.0
  ],
  [
    "2020-10-06T05:00:00",
    35.0,
    12.0
  ],
  [
    "2020-10-06T06:00:00",
    37.0,
    21.0
  ],
  [
    "2020-10-06T07:00:00",
    49.0,
    26.0
  ],
  [
    "2020-10-06T08:00:00",
    68.0,
    44.0
  ],
  [
    "2020-10-06T09:00:00",
    76.0,
    65.0
  ],
  [
    "2020-10-06T10:00:00",
    68.0,
    63.0
  ],
  [
    "2020-10-06T11:00:00",
    59.0,
    61.0
  ],
  [
    "2020-10-06T12:00:00",
    48.0,
    46.0
  ],
  [
    "2020-10-06T13:00:00",
    51.0,
    47.0
  ],
  [
    "2020-10-06T14:00:00",
    52.0,
    56.0
  ],
  [
    "2020-10-06T15:00:00",
    50.0,
    58.0
  ],
  [
    "2020-10-06T16:00:00",
    49.0,
    56.0
  ],
  [
    "2020-10-06T17:00:00",
    49.0,
    51.0
  ],
  [
    "2020-10-06T18:00:00",
    39.0,
    38.0
  ],
  [
    "2020-10-06T19:00:00",
    29.0,
    27.0
  ],
  [
    "2020-10-06T20:00:00",
    27.0,
    21.0
  ],
  [
    "2020-10-06T21:00:00",
    27.0,
    23.0
  ],
  [
    "2020-10-06T22:00:00",
    29.0,
    25.0
  ],
  [
    "2020-10-06T23:00:00",
    25.0,
    24.0
  ],
  [
    "2020-10-07T00:00:00",
    25.0,
    18.0
  ],
  [
    "2020-10-07T01:00:00",
    33.0,
    22.0
  ],
  [
    "2020-10-07T02:00:00",
    28.0,
    23.0
  ],
  [
    "2020-10-07T03:00:00",
    24.0,
    20.0
  ],
  [
    "2020-10-07T04:00:00",
    35.0,
    11.0
  ],
  [
    "2020-10-07T05:00:00",
    39.0,
    12.0
  ],
  [
    "2020-10-07T06:00:00",
    33.0,
    18.0
  ],
  [
    "2020-10-07T07:00:00",
    43.0,
    26.0
  ],
  [
    "2020-10-07T08:00:00",
    63.0,
    43.0
  ],
  [
    "2020-10-07T09:00:00",
    70.0,
    58.0
  ],
  [
    "2020-10-07T10:00:00",
    64.0,
    59.0
  ],
  [
    "2020-10-07T11:00:00",
    56.0,
    57.0
  ],
  [
    "2020-10-07T12:00:00",
    42.0,
    41.0
  ],
  [
    "2020-10-07T13:00:00",
    47.0,
    41.0
  ],
  [
    "2020-10-07T14:00:00",
    48.0,
    51.0
  ],
  [
    "2020-10-07T15:00:00",
    52.0,
    51.0
  ],
  [
    "2020-10-07T16:00:00",
    49.0,
    47.0
  ],
  [
    "2020-10-07T17:00:00",
    52.0,
    47.0
  ],
  [
    "2020-10-07T18:00:00",
    37.0,
    38.0
  ],
  [
    "2020-10-07T19:00:00",
    31.0,
    26.0
  ],
  [
    "2020-10-07T20:00:00",
    29.0,
    26.0
  ],
  [
    "2020-10-07T21:00:00",
    31.0,
    27.0
  ],
  [
    "2020-10-07T22:00:00",
    29.0,
    24.0
  ],
  [
    "2020-10-07T23:00:00",
    25.0,
    21.0
  ],
  [
    "2020-10-08T00:00:00",
    25.0,
    18.0
  ],
  [
    "2020-10-08T01:00:00",
    24.0,
    17.0
  ],
  [
    "2020-10-08T02:00:00",
    28.0,
    17.0
  ],
  [
    "2020-10-08T03:00:00",
    30.0,
    17.0
  ],
  [
    "2020-10-08T04:00:00",
    26.0,
    17.0
  ],
  [
    "2020-10-08T05:00:00",
    42.0,
    15.0
  ],
  [
    "2020-10-08T06:00:00",
    44.0,
    17.0
  ],
  [
    "2020-10-08T07:00:00",
    45.0,
    26.0
  ],
  [
    "2020-10-08T08:00:00",
    63.0,
    45.0
  ],
  [
    "2020-10-08T09:00:00",
    69.0,
    60.0
  ],
  [
    "2020-10-08T10:00:00",
    63.0,
    61.0
  ],
  [
    "2020-10-08T11:00:00",
    59.0,
    57.0
  ],
  [
    "2020-10-08T12:00:00",
    50.0,
    46.0
  ],
  [
    "2020-10-08T13:00:00",
    48.0,
    46.0
  ],
  [
    "2020-10-08T14:00:00",
    56.0,
    56.0
  ],
  [
    "2020-10-08T15:00:00",
    49.0,
    53.0
  ],
  [
    "2020-10-08T16:00:00",
    45.0,
    50.0
  ],
  [
    "2020-10-08T17:00:00",
    43.0,
    43.0
  ],
  [
    "2020-10-08T18:00:00",
    36.0,
    34.0
  ],
  [
    "2020-10-08T19:00:00",
    28.0,
    23.0
  ],
  [
    "2020-10-08T20:00:00",
    28.0,
    21.0
  ],
  [
    "2020-10-08T21:00:00",
    30.0,
    21.0
  ],
  [
    "2020-10-08T22:00:00",
    30.0,
    23.0
  ],
  [
    "2020-10-08T23:00:00",
    29.0,
    23.0
  ],
  [
    "2020-10-09T00:00:00",
    24.0,
    14.0
  ],
  [
    "2020-10-09T01:00:00",
    34.0,
    16.0
  ],
  [
    "2020-10-09T02:00:00",
    25.0,
    15.0
  ],
  [
    "2020-10-09T03:00:00",
    24.0,
    20.0
  ],
  [
    "2020-10-09T04:00:00",
    37.0,
    10.0
  ],
  [
    "2020-10-09T05:00:00",
    29.0,
    11.0
  ],
  [
    "2020-10-09T06:00:00",
    35.0,
    17.0
  ],
  [
    "2020-10-09T07:00:00",
    42.0,
    20.0
  ],
  [
    "2020-10-09T08:00:00",
    58.0,
    45.0
  ],
  [
    "2020-10-09T09:00:00",
    72.0,
    55.0
  ],
  [
    "2020-10-09T10:00:00",
    62.0,
    54.0
  ],
  [
    "2020-10-09T11:00:00",
    52.0,
    53.0
  ],
  [
    "2020-10-09T12:00:00",
    47.0,
    41.0
  ],
  [
    "2020-10-09T13:00:00",
    49.0,
    39.0
  ],
  [
    "2020-10-09T14:00:00",
    50.0,
    48.0
  ],
  [
    "2020-10-09T15:00:00",
    47.0,
    50.0
  ],
  [
    "2020-10-09T16:00:00",
    49.0,
    49.0
  ],
  [
    "2020-10-09T17:00:00",
    42.0,
    43.0
  ],
  [
    "2020-10-09T18:00:00",
    34.0,
    30.0
  ],
  [
    "2020-10-09T19:00:00",
    29.0,
    23.0
  ],
  [
    "2020-10-09T20:00:00",
    27.0,
    19.0
  ],
  [
    "2020-10-09T21:00:00",
    27.0,
    16.0
  ],
  [
    "2020-10-09T22:00:00",
    28.0,
    20.0
  ],
  [
    "2020-10-09T23:00:00",
    28.0,
    15.0
  ],
  [
    "2020-10-10T00:00:00",
    23.0,
    19.0
  ],
  [
    "2020-10-10T01:00:00",
    21.0,
    16.0
  ],
  [
    "2020-10-10T02:00:00",
    25.0,
    18.0
  ],
  [
    "2020-10-10T03:00:00",
    30.0,
    17.0
  ],
  [
    "2020-10-10T04:00:00",
    34.0,
    9.0
  ],
  [
    "2020-10-10T05:00:00",
    28.0,
    18.0
  ],
  [
    "2020-10-10T06:00:00",
    32.0,
    11.0
  ],
  [
    "2020-10-10T07:00:00",
    38.0,
    17.0
  ],
  [
    "2020-10-10T08:00:00",
    48.0,
    20.0
  ],
  [
    "2020-10-10T09:00:00",
    45.0,
    23.0
  ],
  [
    "2020-10-10T10:00:00",
    43.0,
    24.0
  ],
  [
    "2020-10-10T11:00:00",
    36.0,
    23.0
  ],
  [
    "2020-10-10T12:00:00",
    31.0,
    19.0
  ],
  [
    "2020-10-10T13:00:00",
    27.0,
    17.0
  ],
  [
    "2020-10-10T14:00:00",
    26.0,
    18.0
  ],
  [
    "2020-10-10T15:00:00",
    26.0,
    17.0
  ],
  [
    "2020-10-10T16:00:00",
    22.0,
    15.0
  ],
  [
    "2020-10-10T17:00:00",
    22.0,
    15.0
  ],
  [
    "2020-10-10T18:00:00",
    21.0,
    16.0
  ],
  [
    "2020-10-10T19:00:00",
    18.0,
    15.0
  ],
  [
    "2020-10-10T20:00:00",
    17.0,
    12.0
  ],
  [
    "2020-10-10T21:00:00",
    21.0,
    11.0
  ],
  [
    "2020-10-10T22:00:00",
    22.0,
    14.0
  ],
  [
    "2020-10-10T23:00:00",
    24.0,
    15.0
  ],
  [
    "2020-10-11T00:00:00",
    22.0,
    13.0
  ],
  [
    "2020-10-11T01:00:00",
    20.0,
    14.0
  ],
  [
    "2020-10-11T02:00:00",
    19.0,
    13.0
  ],
  [
    "2020-10-11T03:00:00",
    18.0,
    19.0
  ],
  [
    "2020-10-11T04:00:00",
    26.0,
    27.0
  ],
  [
    "2020-10-11T05:00:00",
    25.0,
    12.0
  ],
  [
    "2020-10-11T06:00:00",
    23.0,
    10.0
  ],
  [
    "2020-10-11T07:00:00",
    22.0,
    13.0
  ],
  [
    "2020-10-11T08:00:00",
    31.0,
    9.0
  ],
  [
    "2020-10-11T09:00:00",
    30.0,
    17.0
  ],
  [
    "2020-10-11T10:00:00",
    25.0,
    14.0
  ],
  [
    "2020-10-11T11:00:00",
    26.0,
    15.0
  ],
  [
    "2020-10-11T12:00:00",
    23.0,
    15.0
  ],
  [
    "2020-10-11T13:00:00",
    23.0,
    15.0
  ]],
  days7_med: [
    [
      "date",
      "medecin"
    ],
    [
      "2020-10-04T14:00:00",
      29.0
    ],
    [
      "2020-10-04T15:00:00",
      30.0
    ],
    [
      "2020-10-04T16:00:00",
      29.0
    ],
    [
      "2020-10-04T17:00:00",
      28.0
    ],
    [
      "2020-10-04T18:00:00",
      29.0
    ],
    [
      "2020-10-04T19:00:00",
      28.0
    ],
    [
      "2020-10-04T20:00:00",
      25.0
    ],
    [
      "2020-10-04T21:00:00",
      27.0
    ],
    [
      "2020-10-04T22:00:00",
      28.0
    ],
    [
      "2020-10-04T23:00:00",
      30.0
    ],
    [
      "2020-10-05T00:00:00",
      31.0
    ],
    [
      "2020-10-05T01:00:00",
      38.0
    ],
    [
      "2020-10-05T02:00:00",
      43.0
    ],
    [
      "2020-10-05T03:00:00",
      44.0
    ],
    [
      "2020-10-05T04:00:00",
      45.0
    ],
    [
      "2020-10-05T05:00:00",
      43.0
    ],
    [
      "2020-10-05T06:00:00",
      55.0
    ],
    [
      "2020-10-05T07:00:00",
      70.0
    ],
    [
      "2020-10-05T08:00:00",
      100.0
    ],
    [
      "2020-10-05T09:00:00",
      96.0
    ],
    [
      "2020-10-05T10:00:00",
      82.0
    ],
    [
      "2020-10-05T11:00:00",
      69.0
    ],
    [
      "2020-10-05T12:00:00",
      59.0
    ],
    [
      "2020-10-05T13:00:00",
      58.0
    ],
    [
      "2020-10-05T14:00:00",
      62.0
    ],
    [
      "2020-10-05T15:00:00",
      61.0
    ],
    [
      "2020-10-05T16:00:00",
      56.0
    ],
    [
      "2020-10-05T17:00:00",
      51.0
    ],
    [
      "2020-10-05T18:00:00",
      43.0
    ],
    [
      "2020-10-05T19:00:00",
      36.0
    ],
    [
      "2020-10-05T20:00:00",
      31.0
    ],
    [
      "2020-10-05T21:00:00",
      34.0
    ],
    [
      "2020-10-05T22:00:00",
      31.0
    ],
    [
      "2020-10-05T23:00:00",
      33.0
    ],
    [
      "2020-10-06T00:00:00",
      28.0
    ],
    [
      "2020-10-06T01:00:00",
      32.0
    ],
    [
      "2020-10-06T02:00:00",
      43.0
    ],
    [
      "2020-10-06T03:00:00",
      47.0
    ],
    [
      "2020-10-06T04:00:00",
      48.0
    ],
    [
      "2020-10-06T05:00:00",
      44.0
    ],
    [
      "2020-10-06T06:00:00",
      44.0
    ],
    [
      "2020-10-06T07:00:00",
      56.0
    ],
    [
      "2020-10-06T08:00:00",
      77.0
    ],
    [
      "2020-10-06T09:00:00",
      72.0
    ],
    [
      "2020-10-06T10:00:00",
      68.0
    ],
    [
      "2020-10-06T11:00:00",
      60.0
    ],
    [
      "2020-10-06T12:00:00",
      53.0
    ],
    [
      "2020-10-06T13:00:00",
      55.0
    ],
    [
      "2020-10-06T14:00:00",
      58.0
    ],
    [
      "2020-10-06T15:00:00",
      56.0
    ],
    [
      "2020-10-06T16:00:00",
      53.0
    ],
    [
      "2020-10-06T17:00:00",
      47.0
    ],
    [
      "2020-10-06T18:00:00",
      41.0
    ],
    [
      "2020-10-06T19:00:00",
      36.0
    ],
    [
      "2020-10-06T20:00:00",
      32.0
    ],
    [
      "2020-10-06T21:00:00",
      31.0
    ],
    [
      "2020-10-06T22:00:00",
      31.0
    ],
    [
      "2020-10-06T23:00:00",
      34.0
    ],
    [
      "2020-10-07T00:00:00",
      29.0
    ],
    [
      "2020-10-07T01:00:00",
      32.0
    ],
    [
      "2020-10-07T02:00:00",
      39.0
    ],
    [
      "2020-10-07T03:00:00",
      43.0
    ],
    [
      "2020-10-07T04:00:00",
      51.0
    ],
    [
      "2020-10-07T05:00:00",
      43.0
    ],
    [
      "2020-10-07T06:00:00",
      40.0
    ],
    [
      "2020-10-07T07:00:00",
      52.0
    ],
    [
      "2020-10-07T08:00:00",
      71.0
    ],
    [
      "2020-10-07T09:00:00",
      70.0
    ],
    [
      "2020-10-07T10:00:00",
      67.0
    ],
    [
      "2020-10-07T11:00:00",
      58.0
    ],
    [
      "2020-10-07T12:00:00",
      49.0
    ],
    [
      "2020-10-07T13:00:00",
      49.0
    ],
    [
      "2020-10-07T14:00:00",
      55.0
    ],
    [
      "2020-10-07T15:00:00",
      51.0
    ],
    [
      "2020-10-07T16:00:00",
      51.0
    ],
    [
      "2020-10-07T17:00:00",
      46.0
    ],
    [
      "2020-10-07T18:00:00",
      39.0
    ],
    [
      "2020-10-07T19:00:00",
      33.0
    ],
    [
      "2020-10-07T20:00:00",
      31.0
    ],
    [
      "2020-10-07T21:00:00",
      30.0
    ],
    [
      "2020-10-07T22:00:00",
      29.0
    ],
    [
      "2020-10-07T23:00:00",
      33.0
    ],
    [
      "2020-10-08T00:00:00",
      33.0
    ],
    [
      "2020-10-08T01:00:00",
      35.0
    ],
    [
      "2020-10-08T02:00:00",
      41.0
    ],
    [
      "2020-10-08T03:00:00",
      46.0
    ],
    [
      "2020-10-08T04:00:00",
      36.0
    ],
    [
      "2020-10-08T05:00:00",
      43.0
    ],
    [
      "2020-10-08T06:00:00",
      40.0
    ],
    [
      "2020-10-08T07:00:00",
      54.0
    ],
    [
      "2020-10-08T08:00:00",
      78.0
    ],
    [
      "2020-10-08T09:00:00",
      73.0
    ],
    [
      "2020-10-08T10:00:00",
      68.0
    ],
    [
      "2020-10-08T11:00:00",
      62.0
    ],
    [
      "2020-10-08T12:00:00",
      54.0
    ],
    [
      "2020-10-08T13:00:00",
      53.0
    ],
    [
      "2020-10-08T14:00:00",
      57.0
    ],
    [
      "2020-10-08T15:00:00",
      58.0
    ],
    [
      "2020-10-08T16:00:00",
      52.0
    ],
    [
      "2020-10-08T17:00:00",
      47.0
    ],
    [
      "2020-10-08T18:00:00",
      38.0
    ],
    [
      "2020-10-08T19:00:00",
      34.0
    ],
    [
      "2020-10-08T20:00:00",
      31.0
    ],
    [
      "2020-10-08T21:00:00",
      31.0
    ],
    [
      "2020-10-08T22:00:00",
      34.0
    ],
    [
      "2020-10-08T23:00:00",
      31.0
    ],
    [
      "2020-10-09T00:00:00",
      31.0
    ],
    [
      "2020-10-09T01:00:00",
      31.0
    ],
    [
      "2020-10-09T02:00:00",
      37.0
    ],
    [
      "2020-10-09T03:00:00",
      39.0
    ],
    [
      "2020-10-09T04:00:00",
      47.0
    ],
    [
      "2020-10-09T05:00:00",
      39.0
    ],
    [
      "2020-10-09T06:00:00",
      37.0
    ],
    [
      "2020-10-09T07:00:00",
      48.0
    ],
    [
      "2020-10-09T08:00:00",
      69.0
    ],
    [
      "2020-10-09T09:00:00",
      71.0
    ],
    [
      "2020-10-09T10:00:00",
      63.0
    ],
    [
      "2020-10-09T11:00:00",
      58.0
    ],
    [
      "2020-10-09T12:00:00",
      49.0
    ],
    [
      "2020-10-09T13:00:00",
      55.0
    ],
    [
      "2020-10-09T14:00:00",
      57.0
    ],
    [
      "2020-10-09T15:00:00",
      53.0
    ],
    [
      "2020-10-09T16:00:00",
      50.0
    ],
    [
      "2020-10-09T17:00:00",
      46.0
    ],
    [
      "2020-10-09T18:00:00",
      39.0
    ],
    [
      "2020-10-09T19:00:00",
      32.0
    ],
    [
      "2020-10-09T20:00:00",
      31.0
    ],
    [
      "2020-10-09T21:00:00",
      29.0
    ],
    [
      "2020-10-09T22:00:00",
      29.0
    ],
    [
      "2020-10-09T23:00:00",
      28.0
    ],
    [
      "2020-10-10T00:00:00",
      30.0
    ],
    [
      "2020-10-10T01:00:00",
      31.0
    ],
    [
      "2020-10-10T02:00:00",
      32.0
    ],
    [
      "2020-10-10T03:00:00",
      47.0
    ],
    [
      "2020-10-10T04:00:00",
      51.0
    ],
    [
      "2020-10-10T05:00:00",
      51.0
    ],
    [
      "2020-10-10T06:00:00",
      48.0
    ],
    [
      "2020-10-10T07:00:00",
      51.0
    ],
    [
      "2020-10-10T08:00:00",
      67.0
    ],
    [
      "2020-10-10T09:00:00",
      61.0
    ],
    [
      "2020-10-10T10:00:00",
      54.0
    ],
    [
      "2020-10-10T11:00:00",
      47.0
    ],
    [
      "2020-10-10T12:00:00",
      41.0
    ],
    [
      "2020-10-10T13:00:00",
      38.0
    ],
    [
      "2020-10-10T14:00:00",
      36.0
    ],
    [
      "2020-10-10T15:00:00",
      35.0
    ],
    [
      "2020-10-10T16:00:00",
      31.0
    ],
    [
      "2020-10-10T17:00:00",
      29.0
    ],
    [
      "2020-10-10T18:00:00",
      27.0
    ],
    [
      "2020-10-10T19:00:00",
      25.0
    ],
    [
      "2020-10-10T20:00:00",
      25.0
    ],
    [
      "2020-10-10T21:00:00",
      24.0
    ],
    [
      "2020-10-10T22:00:00",
      28.0
    ],
    [
      "2020-10-10T23:00:00",
      26.0
    ],
    [
      "2020-10-11T00:00:00",
      28.0
    ],
    [
      "2020-10-11T01:00:00",
      28.0
    ],
    [
      "2020-10-11T02:00:00",
      32.0
    ],
    [
      "2020-10-11T03:00:00",
      35.0
    ],
    [
      "2020-10-11T04:00:00",
      49.0
    ],
    [
      "2020-10-11T05:00:00",
      42.0
    ],
    [
      "2020-10-11T06:00:00",
      47.0
    ],
    [
      "2020-10-11T07:00:00",
      41.0
    ],
    [
      "2020-10-11T08:00:00",
      43.0
    ],
    [
      "2020-10-11T09:00:00",
      41.0
    ],
    [
      "2020-10-11T10:00:00",
      38.0
    ],
    [
      "2020-10-11T11:00:00",
      33.0
    ],
    [
      "2020-10-11T12:00:00",
      30.0
    ],
    [
      "2020-10-11T13:00:00",
      34.0
    ]],
  days90_phys: [[
    "date",
    "ostéopathe",
    "kiné"
  ],
  [
    "2020-07-11",
    46.0,
    22.0
  ],
  [
    "2020-07-12",
    40.0,
    26.0
  ],
  [
    "2020-07-13",
    73.0,
    44.0
  ],
  [
    "2020-07-14",
    43.0,
    22.0
  ],
  [
    "2020-07-15",
    70.0,
    57.0
  ],
  [
    "2020-07-16",
    78.0,
    54.0
  ],
  [
    "2020-07-17",
    73.0,
    53.0
  ],
  [
    "2020-07-18",
    55.0,
    16.0
  ],
  [
    "2020-07-19",
    45.0,
    26.0
  ],
  [
    "2020-07-20",
    98.0,
    63.0
  ],
  [
    "2020-07-21",
    76.0,
    50.0
  ],
  [
    "2020-07-22",
    83.0,
    51.0
  ],
  [
    "2020-07-23",
    69.0,
    50.0
  ],
  [
    "2020-07-24",
    58.0,
    46.0
  ],
  [
    "2020-07-25",
    52.0,
    23.0
  ],
  [
    "2020-07-26",
    40.0,
    25.0
  ],
  [
    "2020-07-27",
    95.0,
    65.0
  ],
  [
    "2020-07-28",
    75.0,
    52.0
  ],
  [
    "2020-07-29",
    72.0,
    60.0
  ],
  [
    "2020-07-30",
    70.0,
    48.0
  ],
  [
    "2020-07-31",
    67.0,
    40.0
  ],
  [
    "2020-08-01",
    49.0,
    23.0
  ],
  [
    "2020-08-02",
    47.0,
    18.0
  ],
  [
    "2020-08-03",
    87.0,
    59.0
  ],
  [
    "2020-08-04",
    75.0,
    50.0
  ],
  [
    "2020-08-05",
    81.0,
    45.0
  ],
  [
    "2020-08-06",
    77.0,
    46.0
  ],
  [
    "2020-08-07",
    68.0,
    36.0
  ],
  [
    "2020-08-08",
    41.0,
    20.0
  ],
  [
    "2020-08-09",
    46.0,
    19.0
  ],
  [
    "2020-08-10",
    91.0,
    45.0
  ],
  [
    "2020-08-11",
    70.0,
    47.0
  ],
  [
    "2020-08-12",
    61.0,
    42.0
  ],
  [
    "2020-08-13",
    67.0,
    37.0
  ],
  [
    "2020-08-14",
    66.0,
    39.0
  ],
  [
    "2020-08-15",
    39.0,
    18.0
  ],
  [
    "2020-08-16",
    43.0,
    25.0
  ],
  [
    "2020-08-17",
    100.0,
    58.0
  ],
  [
    "2020-08-18",
    75.0,
    47.0
  ],
  [
    "2020-08-19",
    76.0,
    55.0
  ],
  [
    "2020-08-20",
    78.0,
    47.0
  ],
  [
    "2020-08-21",
    60.0,
    47.0
  ],
  [
    "2020-08-22",
    43.0,
    22.0
  ],
  [
    "2020-08-23",
    39.0,
    20.0
  ],
  [
    "2020-08-24",
    86.0,
    60.0
  ],
  [
    "2020-08-25",
    76.0,
    57.0
  ],
  [
    "2020-08-26",
    70.0,
    51.0
  ],
  [
    "2020-08-27",
    76.0,
    47.0
  ],
  [
    "2020-08-28",
    60.0,
    44.0
  ],
  [
    "2020-08-29",
    46.0,
    25.0
  ],
  [
    "2020-08-30",
    45.0,
    19.0
  ],
  [
    "2020-08-31",
    86.0,
    60.0
  ],
  [
    "2020-09-01",
    67.0,
    52.0
  ],
  [
    "2020-09-02",
    73.0,
    64.0
  ],
  [
    "2020-09-03",
    67.0,
    52.0
  ],
  [
    "2020-09-04",
    67.0,
    58.0
  ],
  [
    "2020-09-05",
    42.0,
    28.0
  ],
  [
    "2020-09-06",
    45.0,
    29.0
  ],
  [
    "2020-09-07",
    86.0,
    64.0
  ],
  [
    "2020-09-08",
    83.0,
    58.0
  ],
  [
    "2020-09-09",
    71.0,
    53.0
  ],
  [
    "2020-09-10",
    68.0,
    68.0
  ],
  [
    "2020-09-11",
    64.0,
    52.0
  ],
  [
    "2020-09-12",
    47.0,
    22.0
  ],
  [
    "2020-09-13",
    41.0,
    24.0
  ],
  [
    "2020-09-14",
    81.0,
    61.0
  ],
  [
    "2020-09-15",
    71.0,
    58.0
  ],
  [
    "2020-09-16",
    68.0,
    58.0
  ],
  [
    "2020-09-17",
    71.0,
    59.0
  ],
  [
    "2020-09-18",
    64.0,
    48.0
  ],
  [
    "2020-09-19",
    40.0,
    23.0
  ],
  [
    "2020-09-20",
    39.0,
    22.0
  ],
  [
    "2020-09-21",
    82.0,
    67.0
  ],
  [
    "2020-09-22",
    78.0,
    59.0
  ],
  [
    "2020-09-23",
    73.0,
    60.0
  ],
  [
    "2020-09-24",
    59.0,
    56.0
  ],
  [
    "2020-09-25",
    60.0,
    49.0
  ],
  [
    "2020-09-26",
    39.0,
    23.0
  ],
  [
    "2020-09-27",
    27.0,
    17.0
  ],
  [
    "2020-09-28",
    67.0,
    66.0
  ],
  [
    "2020-09-29",
    69.0,
    61.0
  ],
  [
    "2020-09-30",
    64.0,
    57.0
  ],
  [
    "2020-10-01",
    66.0,
    54.0
  ],
  [
    "2020-10-02",
    56.0,
    51.0
  ],
  [
    "2020-10-03",
    32.0,
    21.0
  ],
  [
    "2020-10-04",
    40.0,
    22.0
  ],
  [
    "2020-10-05",
    78.0,
    64.0
  ],
  [
    "2020-10-06",
    62.0,
    66.0
  ],
  [
    "2020-10-07",
    62.0,
    68.0
  ],
  [
    "2020-10-08",
    74.0,
    53.0
  ]],
  days90_med: [[
    "date",
    "medecin"
  ],
  [
    "2020-07-11",
    46.0
  ],
  [
    "2020-07-12",
    42.0
  ],
  [
    "2020-07-13",
    75.0
  ],
  [
    "2020-07-14",
    46.0
  ],
  [
    "2020-07-15",
    69.0
  ],
  [
    "2020-07-16",
    67.0
  ],
  [
    "2020-07-17",
    63.0
  ],
  [
    "2020-07-18",
    52.0
  ],
  [
    "2020-07-19",
    44.0
  ],
  [
    "2020-07-20",
    74.0
  ],
  [
    "2020-07-21",
    60.0
  ],
  [
    "2020-07-22",
    59.0
  ],
  [
    "2020-07-23",
    56.0
  ],
  [
    "2020-07-24",
    62.0
  ],
  [
    "2020-07-25",
    47.0
  ],
  [
    "2020-07-26",
    49.0
  ],
  [
    "2020-07-27",
    73.0
  ],
  [
    "2020-07-28",
    64.0
  ],
  [
    "2020-07-29",
    60.0
  ],
  [
    "2020-07-30",
    59.0
  ],
  [
    "2020-07-31",
    56.0
  ],
  [
    "2020-08-01",
    47.0
  ],
  [
    "2020-08-02",
    44.0
  ],
  [
    "2020-08-03",
    74.0
  ],
  [
    "2020-08-04",
    61.0
  ],
  [
    "2020-08-05",
    67.0
  ],
  [
    "2020-08-06",
    58.0
  ],
  [
    "2020-08-07",
    56.0
  ],
  [
    "2020-08-08",
    51.0
  ],
  [
    "2020-08-09",
    40.0
  ],
  [
    "2020-08-10",
    74.0
  ],
  [
    "2020-08-11",
    65.0
  ],
  [
    "2020-08-12",
    62.0
  ],
  [
    "2020-08-13",
    67.0
  ],
  [
    "2020-08-14",
    63.0
  ],
  [
    "2020-08-15",
    51.0
  ],
  [
    "2020-08-16",
    47.0
  ],
  [
    "2020-08-17",
    77.0
  ],
  [
    "2020-08-18",
    69.0
  ],
  [
    "2020-08-19",
    63.0
  ],
  [
    "2020-08-20",
    67.0
  ],
  [
    "2020-08-21",
    64.0
  ],
  [
    "2020-08-22",
    47.0
  ],
  [
    "2020-08-23",
    41.0
  ],
  [
    "2020-08-24",
    80.0
  ],
  [
    "2020-08-25",
    64.0
  ],
  [
    "2020-08-26",
    67.0
  ],
  [
    "2020-08-27",
    65.0
  ],
  [
    "2020-08-28",
    55.0
  ],
  [
    "2020-08-29",
    45.0
  ],
  [
    "2020-08-30",
    44.0
  ],
  [
    "2020-08-31",
    75.0
  ],
  [
    "2020-09-01",
    76.0
  ],
  [
    "2020-09-02",
    80.0
  ],
  [
    "2020-09-03",
    73.0
  ],
  [
    "2020-09-04",
    65.0
  ],
  [
    "2020-09-05",
    53.0
  ],
  [
    "2020-09-06",
    53.0
  ],
  [
    "2020-09-07",
    87.0
  ],
  [
    "2020-09-08",
    80.0
  ],
  [
    "2020-09-09",
    75.0
  ],
  [
    "2020-09-10",
    84.0
  ],
  [
    "2020-09-11",
    79.0
  ],
  [
    "2020-09-12",
    57.0
  ],
  [
    "2020-09-13",
    49.0
  ],
  [
    "2020-09-14",
    100.0
  ],
  [
    "2020-09-15",
    83.0
  ],
  [
    "2020-09-16",
    75.0
  ],
  [
    "2020-09-17",
    76.0
  ],
  [
    "2020-09-18",
    73.0
  ],
  [
    "2020-09-19",
    54.0
  ],
  [
    "2020-09-20",
    45.0
  ],
  [
    "2020-09-21",
    83.0
  ],
  [
    "2020-09-22",
    73.0
  ],
  [
    "2020-09-23",
    71.0
  ],
  [
    "2020-09-24",
    66.0
  ],
  [
    "2020-09-25",
    65.0
  ],
  [
    "2020-09-26",
    46.0
  ],
  [
    "2020-09-27",
    41.0
  ],
  [
    "2020-09-28",
    71.0
  ],
  [
    "2020-09-29",
    65.0
  ],
  [
    "2020-09-30",
    60.0
  ],
  [
    "2020-10-01",
    61.0
  ],
  [
    "2020-10-02",
    61.0
  ],
  [
    "2020-10-03",
    43.0
  ],
  [
    "2020-10-04",
    43.0
  ],
  [
    "2020-10-05",
    79.0
  ],
  [
    "2020-10-06",
    63.0
  ],
  [
    "2020-10-07",
    60.0
  ],
  [
    "2020-10-08",
    62.0
  ]],
  years5_phys: [
    [
      "date",
      "ostéopathe",
      "kiné"
    ],
    [
      "2015-10-11",
      50.0,
      53.0
    ],
    [
      "2015-10-18",
      44.0,
      50.0
    ],
    [
      "2015-10-25",
      47.0,
      51.0
    ],
    [
      "2015-11-01",
      51.0,
      53.0
    ],
    [
      "2015-11-08",
      47.0,
      48.0
    ],
    [
      "2015-11-15",
      43.0,
      48.0
    ],
    [
      "2015-11-22",
      46.0,
      51.0
    ],
    [
      "2015-11-29",
      50.0,
      53.0
    ],
    [
      "2015-12-06",
      49.0,
      51.0
    ],
    [
      "2015-12-13",
      47.0,
      55.0
    ],
    [
      "2015-12-20",
      39.0,
      38.0
    ],
    [
      "2015-12-27",
      43.0,
      41.0
    ],
    [
      "2016-01-03",
      52.0,
      62.0
    ],
    [
      "2016-01-10",
      52.0,
      56.0
    ],
    [
      "2016-01-17",
      53.0,
      59.0
    ],
    [
      "2016-01-24",
      52.0,
      58.0
    ],
    [
      "2016-01-31",
      54.0,
      55.0
    ],
    [
      "2016-02-07",
      52.0,
      58.0
    ],
    [
      "2016-02-14",
      49.0,
      61.0
    ],
    [
      "2016-02-21",
      52.0,
      60.0
    ],
    [
      "2016-02-28",
      52.0,
      59.0
    ],
    [
      "2016-03-06",
      52.0,
      64.0
    ],
    [
      "2016-03-13",
      56.0,
      63.0
    ],
    [
      "2016-03-20",
      49.0,
      58.0
    ],
    [
      "2016-03-27",
      46.0,
      54.0
    ],
    [
      "2016-04-03",
      54.0,
      56.0
    ],
    [
      "2016-04-10",
      54.0,
      51.0
    ],
    [
      "2016-04-17",
      55.0,
      52.0
    ],
    [
      "2016-04-24",
      51.0,
      57.0
    ],
    [
      "2016-05-01",
      47.0,
      48.0
    ],
    [
      "2016-05-08",
      55.0,
      52.0
    ],
    [
      "2016-05-15",
      47.0,
      49.0
    ],
    [
      "2016-05-22",
      51.0,
      54.0
    ],
    [
      "2016-05-29",
      49.0,
      52.0
    ],
    [
      "2016-06-05",
      52.0,
      57.0
    ],
    [
      "2016-06-12",
      51.0,
      49.0
    ],
    [
      "2016-06-19",
      50.0,
      52.0
    ],
    [
      "2016-06-26",
      48.0,
      51.0
    ],
    [
      "2016-07-03",
      50.0,
      53.0
    ],
    [
      "2016-07-10",
      50.0,
      41.0
    ],
    [
      "2016-07-17",
      60.0,
      48.0
    ],
    [
      "2016-07-24",
      58.0,
      44.0
    ],
    [
      "2016-07-31",
      58.0,
      42.0
    ],
    [
      "2016-08-07",
      58.0,
      60.0
    ],
    [
      "2016-08-14",
      56.0,
      49.0
    ],
    [
      "2016-08-21",
      63.0,
      52.0
    ],
    [
      "2016-08-28",
      59.0,
      49.0
    ],
    [
      "2016-09-04",
      60.0,
      61.0
    ],
    [
      "2016-09-11",
      56.0,
      54.0
    ],
    [
      "2016-09-18",
      61.0,
      56.0
    ],
    [
      "2016-09-25",
      58.0,
      56.0
    ],
    [
      "2016-10-02",
      58.0,
      59.0
    ],
    [
      "2016-10-09",
      54.0,
      55.0
    ],
    [
      "2016-10-16",
      59.0,
      56.0
    ],
    [
      "2016-10-23",
      58.0,
      56.0
    ],
    [
      "2016-10-30",
      49.0,
      53.0
    ],
    [
      "2016-11-06",
      49.0,
      50.0
    ],
    [
      "2016-11-13",
      59.0,
      56.0
    ],
    [
      "2016-11-20",
      58.0,
      61.0
    ],
    [
      "2016-11-27",
      58.0,
      56.0
    ],
    [
      "2016-12-04",
      57.0,
      59.0
    ],
    [
      "2016-12-11",
      58.0,
      57.0
    ],
    [
      "2016-12-18",
      46.0,
      51.0
    ],
    [
      "2016-12-25",
      49.0,
      44.0
    ],
    [
      "2017-01-01",
      64.0,
      62.0
    ],
    [
      "2017-01-08",
      56.0,
      58.0
    ],
    [
      "2017-01-15",
      52.0,
      62.0
    ],
    [
      "2017-01-22",
      55.0,
      60.0
    ],
    [
      "2017-01-29",
      60.0,
      61.0
    ],
    [
      "2017-02-05",
      61.0,
      58.0
    ],
    [
      "2017-02-12",
      60.0,
      59.0
    ],
    [
      "2017-02-19",
      67.0,
      63.0
    ],
    [
      "2017-02-26",
      62.0,
      61.0
    ],
    [
      "2017-03-05",
      70.0,
      65.0
    ],
    [
      "2017-03-12",
      73.0,
      64.0
    ],
    [
      "2017-03-19",
      69.0,
      63.0
    ],
    [
      "2017-03-26",
      69.0,
      61.0
    ],
    [
      "2017-04-02",
      64.0,
      57.0
    ],
    [
      "2017-04-09",
      67.0,
      56.0
    ],
    [
      "2017-04-16",
      65.0,
      49.0
    ],
    [
      "2017-04-23",
      62.0,
      55.0
    ],
    [
      "2017-04-30",
      58.0,
      53.0
    ],
    [
      "2017-05-07",
      60.0,
      52.0
    ],
    [
      "2017-05-14",
      66.0,
      58.0
    ],
    [
      "2017-05-21",
      54.0,
      46.0
    ],
    [
      "2017-05-28",
      65.0,
      58.0
    ],
    [
      "2017-06-04",
      67.0,
      54.0
    ],
    [
      "2017-06-11",
      63.0,
      55.0
    ],
    [
      "2017-06-18",
      60.0,
      54.0
    ],
    [
      "2017-06-25",
      61.0,
      54.0
    ],
    [
      "2017-07-02",
      64.0,
      54.0
    ],
    [
      "2017-07-09",
      54.0,
      44.0
    ],
    [
      "2017-07-16",
      73.0,
      50.0
    ],
    [
      "2017-07-23",
      73.0,
      49.0
    ],
    [
      "2017-07-30",
      73.0,
      49.0
    ],
    [
      "2017-08-06",
      74.0,
      43.0
    ],
    [
      "2017-08-13",
      76.0,
      40.0
    ],
    [
      "2017-08-20",
      77.0,
      56.0
    ],
    [
      "2017-08-27",
      75.0,
      55.0
    ],
    [
      "2017-09-03",
      75.0,
      60.0
    ],
    [
      "2017-09-10",
      74.0,
      57.0
    ],
    [
      "2017-09-17",
      73.0,
      63.0
    ],
    [
      "2017-09-24",
      72.0,
      60.0
    ],
    [
      "2017-10-01",
      65.0,
      61.0
    ],
    [
      "2017-10-08",
      75.0,
      62.0
    ],
    [
      "2017-10-15",
      71.0,
      60.0
    ],
    [
      "2017-10-22",
      78.0,
      60.0
    ],
    [
      "2017-10-29",
      64.0,
      53.0
    ],
    [
      "2017-11-05",
      69.0,
      65.0
    ],
    [
      "2017-11-12",
      68.0,
      66.0
    ],
    [
      "2017-11-19",
      67.0,
      60.0
    ],
    [
      "2017-11-26",
      64.0,
      60.0
    ],
    [
      "2017-12-03",
      61.0,
      63.0
    ],
    [
      "2017-12-10",
      60.0,
      61.0
    ],
    [
      "2017-12-17",
      61.0,
      58.0
    ],
    [
      "2017-12-24",
      54.0,
      47.0
    ],
    [
      "2017-12-31",
      68.0,
      55.0
    ],
    [
      "2018-01-07",
      73.0,
      70.0
    ],
    [
      "2018-01-14",
      70.0,
      62.0
    ],
    [
      "2018-01-21",
      72.0,
      69.0
    ],
    [
      "2018-01-28",
      75.0,
      73.0
    ],
    [
      "2018-02-04",
      64.0,
      68.0
    ],
    [
      "2018-02-11",
      69.0,
      63.0
    ],
    [
      "2018-02-18",
      74.0,
      62.0
    ],
    [
      "2018-02-25",
      72.0,
      62.0
    ],
    [
      "2018-03-04",
      70.0,
      64.0
    ],
    [
      "2018-03-11",
      73.0,
      67.0
    ],
    [
      "2018-03-18",
      72.0,
      70.0
    ],
    [
      "2018-03-25",
      74.0,
      69.0
    ],
    [
      "2018-04-01",
      68.0,
      60.0
    ],
    [
      "2018-04-08",
      74.0,
      63.0
    ],
    [
      "2018-04-15",
      74.0,
      63.0
    ],
    [
      "2018-04-22",
      69.0,
      60.0
    ],
    [
      "2018-04-29",
      64.0,
      50.0
    ],
    [
      "2018-05-06",
      54.0,
      42.0
    ],
    [
      "2018-05-13",
      68.0,
      60.0
    ],
    [
      "2018-05-20",
      65.0,
      63.0
    ],
    [
      "2018-05-27",
      71.0,
      63.0
    ],
    [
      "2018-06-03",
      74.0,
      60.0
    ],
    [
      "2018-06-10",
      68.0,
      60.0
    ],
    [
      "2018-06-17",
      66.0,
      56.0
    ],
    [
      "2018-06-24",
      66.0,
      56.0
    ],
    [
      "2018-07-01",
      65.0,
      60.0
    ],
    [
      "2018-07-08",
      72.0,
      59.0
    ],
    [
      "2018-07-15",
      77.0,
      55.0
    ],
    [
      "2018-07-22",
      79.0,
      52.0
    ],
    [
      "2018-07-29",
      79.0,
      50.0
    ],
    [
      "2018-08-05",
      88.0,
      49.0
    ],
    [
      "2018-08-12",
      80.0,
      46.0
    ],
    [
      "2018-08-19",
      84.0,
      53.0
    ],
    [
      "2018-08-26",
      86.0,
      61.0
    ],
    [
      "2018-09-02",
      87.0,
      67.0
    ],
    [
      "2018-09-09",
      84.0,
      65.0
    ],
    [
      "2018-09-16",
      80.0,
      66.0
    ],
    [
      "2018-09-23",
      79.0,
      64.0
    ],
    [
      "2018-09-30",
      78.0,
      63.0
    ],
    [
      "2018-10-07",
      84.0,
      66.0
    ],
    [
      "2018-10-14",
      76.0,
      68.0
    ],
    [
      "2018-10-21",
      78.0,
      65.0
    ],
    [
      "2018-10-28",
      69.0,
      56.0
    ],
    [
      "2018-11-04",
      87.0,
      70.0
    ],
    [
      "2018-11-11",
      79.0,
      68.0
    ],
    [
      "2018-11-18",
      68.0,
      66.0
    ],
    [
      "2018-11-25",
      73.0,
      67.0
    ],
    [
      "2018-12-02",
      72.0,
      72.0
    ],
    [
      "2018-12-09",
      74.0,
      67.0
    ],
    [
      "2018-12-16",
      74.0,
      63.0
    ],
    [
      "2018-12-23",
      67.0,
      46.0
    ],
    [
      "2018-12-30",
      77.0,
      57.0
    ],
    [
      "2019-01-06",
      87.0,
      81.0
    ],
    [
      "2019-01-13",
      76.0,
      75.0
    ],
    [
      "2019-01-20",
      80.0,
      69.0
    ],
    [
      "2019-01-27",
      81.0,
      70.0
    ],
    [
      "2019-02-03",
      78.0,
      71.0
    ],
    [
      "2019-02-10",
      91.0,
      74.0
    ],
    [
      "2019-02-17",
      90.0,
      77.0
    ],
    [
      "2019-02-24",
      91.0,
      74.0
    ],
    [
      "2019-03-03",
      91.0,
      69.0
    ],
    [
      "2019-03-10",
      90.0,
      78.0
    ],
    [
      "2019-03-17",
      92.0,
      76.0
    ],
    [
      "2019-03-24",
      87.0,
      75.0
    ],
    [
      "2019-03-31",
      85.0,
      77.0
    ],
    [
      "2019-04-07",
      85.0,
      75.0
    ],
    [
      "2019-04-14",
      81.0,
      66.0
    ],
    [
      "2019-04-21",
      78.0,
      59.0
    ],
    [
      "2019-04-28",
      77.0,
      60.0
    ],
    [
      "2019-05-05",
      80.0,
      62.0
    ],
    [
      "2019-05-12",
      83.0,
      65.0
    ],
    [
      "2019-05-19",
      80.0,
      72.0
    ],
    [
      "2019-05-26",
      66.0,
      61.0
    ],
    [
      "2019-06-02",
      71.0,
      64.0
    ],
    [
      "2019-06-09",
      81.0,
      59.0
    ],
    [
      "2019-06-16",
      81.0,
      65.0
    ],
    [
      "2019-06-23",
      71.0,
      62.0
    ],
    [
      "2019-06-30",
      76.0,
      65.0
    ],
    [
      "2019-07-07",
      79.0,
      58.0
    ],
    [
      "2019-07-14",
      85.0,
      60.0
    ],
    [
      "2019-07-21",
      87.0,
      54.0
    ],
    [
      "2019-07-28",
      99.0,
      56.0
    ],
    [
      "2019-08-04",
      98.0,
      52.0
    ],
    [
      "2019-08-11",
      90.0,
      46.0
    ],
    [
      "2019-08-18",
      97.0,
      63.0
    ],
    [
      "2019-08-25",
      94.0,
      64.0
    ],
    [
      "2019-09-01",
      94.0,
      71.0
    ],
    [
      "2019-09-08",
      91.0,
      70.0
    ],
    [
      "2019-09-15",
      92.0,
      67.0
    ],
    [
      "2019-09-22",
      93.0,
      69.0
    ],
    [
      "2019-09-29",
      82.0,
      68.0
    ],
    [
      "2019-10-06",
      85.0,
      66.0
    ],
    [
      "2019-10-13",
      88.0,
      70.0
    ],
    [
      "2019-10-20",
      88.0,
      72.0
    ],
    [
      "2019-10-27",
      78.0,
      58.0
    ],
    [
      "2019-11-03",
      90.0,
      75.0
    ],
    [
      "2019-11-10",
      81.0,
      69.0
    ],
    [
      "2019-11-17",
      85.0,
      75.0
    ],
    [
      "2019-11-24",
      86.0,
      74.0
    ],
    [
      "2019-12-01",
      79.0,
      67.0
    ],
    [
      "2019-12-08",
      78.0,
      65.0
    ],
    [
      "2019-12-15",
      75.0,
      60.0
    ],
    [
      "2019-12-22",
      68.0,
      41.0
    ],
    [
      "2019-12-29",
      77.0,
      48.0
    ],
    [
      "2020-01-05",
      92.0,
      77.0
    ],
    [
      "2020-01-12",
      89.0,
      75.0
    ],
    [
      "2020-01-19",
      86.0,
      76.0
    ],
    [
      "2020-01-26",
      95.0,
      75.0
    ],
    [
      "2020-02-02",
      88.0,
      78.0
    ],
    [
      "2020-02-09",
      91.0,
      72.0
    ],
    [
      "2020-02-16",
      89.0,
      70.0
    ],
    [
      "2020-02-23",
      91.0,
      67.0
    ],
    [
      "2020-03-01",
      87.0,
      70.0
    ],
    [
      "2020-03-08",
      76.0,
      70.0
    ],
    [
      "2020-03-15",
      29.0,
      49.0
    ],
    [
      "2020-03-22",
      23.0,
      25.0
    ],
    [
      "2020-03-29",
      24.0,
      26.0
    ],
    [
      "2020-04-05",
      26.0,
      22.0
    ],
    [
      "2020-04-12",
      32.0,
      26.0
    ],
    [
      "2020-04-19",
      41.0,
      31.0
    ],
    [
      "2020-04-26",
      43.0,
      36.0
    ],
    [
      "2020-05-03",
      54.0,
      40.0
    ],
    [
      "2020-05-10",
      77.0,
      51.0
    ],
    [
      "2020-05-17",
      75.0,
      47.0
    ],
    [
      "2020-05-24",
      85.0,
      58.0
    ],
    [
      "2020-05-31",
      79.0,
      58.0
    ],
    [
      "2020-06-07",
      91.0,
      65.0
    ],
    [
      "2020-06-14",
      94.0,
      67.0
    ],
    [
      "2020-06-21",
      98.0,
      68.0
    ],
    [
      "2020-06-28",
      98.0,
      68.0
    ],
    [
      "2020-07-05",
      97.0,
      68.0
    ],
    [
      "2020-07-12",
      91.0,
      61.0
    ],
    [
      "2020-07-19",
      99.0,
      64.0
    ],
    [
      "2020-07-26",
      100.0,
      67.0
    ],
    [
      "2020-08-02",
      98.0,
      58.0
    ],
    [
      "2020-08-09",
      88.0,
      55.0
    ],
    [
      "2020-08-16",
      99.0,
      60.0
    ],
    [
      "2020-08-23",
      96.0,
      64.0
    ],
    [
      "2020-08-30",
      96.0,
      68.0
    ],
    [
      "2020-09-06",
      97.0,
      74.0
    ],
    [
      "2020-09-13",
      94.0,
      80.0
    ],
    [
      "2020-09-20",
      93.0,
      71.0
    ],
    [
      "2020-09-27",
      80.0,
      73.0
    ],
    [
      "2020-10-04",
      96.0,
      80.0
    ]],
  years5_med:
    [
      [
        "date",
        "medecin"
      ],
      [
        "2015-10-11",
        57.0
      ],
      [
        "2015-10-18",
        54.0
      ],
      [
        "2015-10-25",
        52.0
      ],
      [
        "2015-11-01",
        56.0
      ],
      [
        "2015-11-08",
        55.0
      ],
      [
        "2015-11-15",
        51.0
      ],
      [
        "2015-11-22",
        52.0
      ],
      [
        "2015-11-29",
        54.0
      ],
      [
        "2015-12-06",
        54.0
      ],
      [
        "2015-12-13",
        56.0
      ],
      [
        "2015-12-20",
        54.0
      ],
      [
        "2015-12-27",
        59.0
      ],
      [
        "2016-01-03",
        62.0
      ],
      [
        "2016-01-10",
        57.0
      ],
      [
        "2016-01-17",
        62.0
      ],
      [
        "2016-01-24",
        62.0
      ],
      [
        "2016-01-31",
        65.0
      ],
      [
        "2016-02-07",
        65.0
      ],
      [
        "2016-02-14",
        64.0
      ],
      [
        "2016-02-21",
        69.0
      ],
      [
        "2016-02-28",
        65.0
      ],
      [
        "2016-03-06",
        68.0
      ],
      [
        "2016-03-13",
        71.0
      ],
      [
        "2016-03-20",
        71.0
      ],
      [
        "2016-03-27",
        69.0
      ],
      [
        "2016-04-03",
        62.0
      ],
      [
        "2016-04-10",
        60.0
      ],
      [
        "2016-04-17",
        60.0
      ],
      [
        "2016-04-24",
        57.0
      ],
      [
        "2016-05-01",
        54.0
      ],
      [
        "2016-05-08",
        57.0
      ],
      [
        "2016-05-15",
        57.0
      ],
      [
        "2016-05-22",
        56.0
      ],
      [
        "2016-05-29",
        57.0
      ],
      [
        "2016-06-05",
        58.0
      ],
      [
        "2016-06-12",
        60.0
      ],
      [
        "2016-06-19",
        57.0
      ],
      [
        "2016-06-26",
        59.0
      ],
      [
        "2016-07-03",
        58.0
      ],
      [
        "2016-07-10",
        59.0
      ],
      [
        "2016-07-17",
        63.0
      ],
      [
        "2016-07-24",
        64.0
      ],
      [
        "2016-07-31",
        64.0
      ],
      [
        "2016-08-07",
        62.0
      ],
      [
        "2016-08-14",
        62.0
      ],
      [
        "2016-08-21",
        64.0
      ],
      [
        "2016-08-28",
        67.0
      ],
      [
        "2016-09-04",
        72.0
      ],
      [
        "2016-09-11",
        69.0
      ],
      [
        "2016-09-18",
        70.0
      ],
      [
        "2016-09-25",
        71.0
      ],
      [
        "2016-10-02",
        73.0
      ],
      [
        "2016-10-09",
        67.0
      ],
      [
        "2016-10-16",
        69.0
      ],
      [
        "2016-10-23",
        67.0
      ],
      [
        "2016-10-30",
        62.0
      ],
      [
        "2016-11-06",
        63.0
      ],
      [
        "2016-11-13",
        68.0
      ],
      [
        "2016-11-20",
        65.0
      ],
      [
        "2016-11-27",
        64.0
      ],
      [
        "2016-12-04",
        71.0
      ],
      [
        "2016-12-11",
        72.0
      ],
      [
        "2016-12-18",
        72.0
      ],
      [
        "2016-12-25",
        83.0
      ],
      [
        "2017-01-01",
        82.0
      ],
      [
        "2017-01-08",
        77.0
      ],
      [
        "2017-01-15",
        80.0
      ],
      [
        "2017-01-22",
        77.0
      ],
      [
        "2017-01-29",
        80.0
      ],
      [
        "2017-02-05",
        73.0
      ],
      [
        "2017-02-12",
        68.0
      ],
      [
        "2017-02-19",
        71.0
      ],
      [
        "2017-02-26",
        66.0
      ],
      [
        "2017-03-05",
        68.0
      ],
      [
        "2017-03-12",
        68.0
      ],
      [
        "2017-03-19",
        67.0
      ],
      [
        "2017-03-26",
        65.0
      ],
      [
        "2017-04-02",
        65.0
      ],
      [
        "2017-04-09",
        66.0
      ],
      [
        "2017-04-16",
        64.0
      ],
      [
        "2017-04-23",
        59.0
      ],
      [
        "2017-04-30",
        61.0
      ],
      [
        "2017-05-07",
        61.0
      ],
      [
        "2017-05-14",
        64.0
      ],
      [
        "2017-05-21",
        63.0
      ],
      [
        "2017-05-28",
        66.0
      ],
      [
        "2017-06-04",
        68.0
      ],
      [
        "2017-06-11",
        65.0
      ],
      [
        "2017-06-18",
        64.0
      ],
      [
        "2017-06-25",
        69.0
      ],
      [
        "2017-07-02",
        67.0
      ],
      [
        "2017-07-09",
        67.0
      ],
      [
        "2017-07-16",
        70.0
      ],
      [
        "2017-07-23",
        67.0
      ],
      [
        "2017-07-30",
        70.0
      ],
      [
        "2017-08-06",
        73.0
      ],
      [
        "2017-08-13",
        68.0
      ],
      [
        "2017-08-20",
        70.0
      ],
      [
        "2017-08-27",
        66.0
      ],
      [
        "2017-09-03",
        74.0
      ],
      [
        "2017-09-10",
        75.0
      ],
      [
        "2017-09-17",
        81.0
      ],
      [
        "2017-09-24",
        81.0
      ],
      [
        "2017-10-01",
        78.0
      ],
      [
        "2017-10-08",
        74.0
      ],
      [
        "2017-10-15",
        76.0
      ],
      [
        "2017-10-22",
        69.0
      ],
      [
        "2017-10-29",
        69.0
      ],
      [
        "2017-11-05",
        69.0
      ],
      [
        "2017-11-12",
        73.0
      ],
      [
        "2017-11-19",
        69.0
      ],
      [
        "2017-11-26",
        72.0
      ],
      [
        "2017-12-03",
        73.0
      ],
      [
        "2017-12-10",
        76.0
      ],
      [
        "2017-12-17",
        82.0
      ],
      [
        "2017-12-24",
        100.0
      ],
      [
        "2017-12-31",
        92.0
      ],
      [
        "2018-01-07",
        84.0
      ],
      [
        "2018-01-14",
        79.0
      ],
      [
        "2018-01-21",
        80.0
      ],
      [
        "2018-01-28",
        77.0
      ],
      [
        "2018-02-04",
        76.0
      ],
      [
        "2018-02-11",
        80.0
      ],
      [
        "2018-02-18",
        81.0
      ],
      [
        "2018-02-25",
        76.0
      ],
      [
        "2018-03-04",
        80.0
      ],
      [
        "2018-03-11",
        77.0
      ],
      [
        "2018-03-18",
        72.0
      ],
      [
        "2018-03-25",
        76.0
      ],
      [
        "2018-04-01",
        75.0
      ],
      [
        "2018-04-08",
        74.0
      ],
      [
        "2018-04-15",
        69.0
      ],
      [
        "2018-04-22",
        66.0
      ],
      [
        "2018-04-29",
        60.0
      ],
      [
        "2018-05-06",
        63.0
      ],
      [
        "2018-05-13",
        70.0
      ],
      [
        "2018-05-20",
        66.0
      ],
      [
        "2018-05-27",
        68.0
      ],
      [
        "2018-06-03",
        67.0
      ],
      [
        "2018-06-10",
        67.0
      ],
      [
        "2018-06-17",
        69.0
      ],
      [
        "2018-06-24",
        67.0
      ],
      [
        "2018-07-01",
        71.0
      ],
      [
        "2018-07-08",
        68.0
      ],
      [
        "2018-07-15",
        71.0
      ],
      [
        "2018-07-22",
        73.0
      ],
      [
        "2018-07-29",
        75.0
      ],
      [
        "2018-08-05",
        77.0
      ],
      [
        "2018-08-12",
        77.0
      ],
      [
        "2018-08-19",
        77.0
      ],
      [
        "2018-08-26",
        73.0
      ],
      [
        "2018-09-02",
        83.0
      ],
      [
        "2018-09-09",
        80.0
      ],
      [
        "2018-09-16",
        86.0
      ],
      [
        "2018-09-23",
        77.0
      ],
      [
        "2018-09-30",
        80.0
      ],
      [
        "2018-10-07",
        78.0
      ],
      [
        "2018-10-14",
        77.0
      ],
      [
        "2018-10-21",
        73.0
      ],
      [
        "2018-10-28",
        68.0
      ],
      [
        "2018-11-04",
        75.0
      ],
      [
        "2018-11-11",
        74.0
      ],
      [
        "2018-11-18",
        72.0
      ],
      [
        "2018-11-25",
        75.0
      ],
      [
        "2018-12-02",
        74.0
      ],
      [
        "2018-12-09",
        72.0
      ],
      [
        "2018-12-16",
        77.0
      ],
      [
        "2018-12-23",
        82.0
      ],
      [
        "2018-12-30",
        86.0
      ],
      [
        "2019-01-06",
        82.0
      ],
      [
        "2019-01-13",
        84.0
      ],
      [
        "2019-01-20",
        89.0
      ],
      [
        "2019-01-27",
        93.0
      ],
      [
        "2019-02-03",
        99.0
      ],
      [
        "2019-02-10",
        94.0
      ],
      [
        "2019-02-17",
        84.0
      ],
      [
        "2019-02-24",
        79.0
      ],
      [
        "2019-03-03",
        77.0
      ],
      [
        "2019-03-10",
        76.0
      ],
      [
        "2019-03-17",
        76.0
      ],
      [
        "2019-03-24",
        73.0
      ],
      [
        "2019-03-31",
        75.0
      ],
      [
        "2019-04-07",
        76.0
      ],
      [
        "2019-04-14",
        69.0
      ],
      [
        "2019-04-21",
        68.0
      ],
      [
        "2019-04-28",
        65.0
      ],
      [
        "2019-05-05",
        69.0
      ],
      [
        "2019-05-12",
        70.0
      ],
      [
        "2019-05-19",
        69.0
      ],
      [
        "2019-05-26",
        65.0
      ],
      [
        "2019-06-02",
        67.0
      ],
      [
        "2019-06-09",
        68.0
      ],
      [
        "2019-06-16",
        73.0
      ],
      [
        "2019-06-23",
        69.0
      ],
      [
        "2019-06-30",
        75.0
      ],
      [
        "2019-07-07",
        75.0
      ],
      [
        "2019-07-14",
        71.0
      ],
      [
        "2019-07-21",
        71.0
      ],
      [
        "2019-07-28",
        75.0
      ],
      [
        "2019-08-04",
        78.0
      ],
      [
        "2019-08-11",
        75.0
      ],
      [
        "2019-08-18",
        77.0
      ],
      [
        "2019-08-25",
        76.0
      ],
      [
        "2019-09-01",
        81.0
      ],
      [
        "2019-09-08",
        82.0
      ],
      [
        "2019-09-15",
        85.0
      ],
      [
        "2019-09-22",
        82.0
      ],
      [
        "2019-09-29",
        80.0
      ],
      [
        "2019-10-06",
        83.0
      ],
      [
        "2019-10-13",
        82.0
      ],
      [
        "2019-10-20",
        77.0
      ],
      [
        "2019-10-27",
        71.0
      ],
      [
        "2019-11-03",
        78.0
      ],
      [
        "2019-11-10",
        75.0
      ],
      [
        "2019-11-17",
        79.0
      ],
      [
        "2019-11-24",
        77.0
      ],
      [
        "2019-12-01",
        74.0
      ],
      [
        "2019-12-08",
        74.0
      ],
      [
        "2019-12-15",
        75.0
      ],
      [
        "2019-12-22",
        83.0
      ],
      [
        "2019-12-29",
        87.0
      ],
      [
        "2020-01-05",
        88.0
      ],
      [
        "2020-01-12",
        87.0
      ],
      [
        "2020-01-19",
        86.0
      ],
      [
        "2020-01-26",
        96.0
      ],
      [
        "2020-02-02",
        98.0
      ],
      [
        "2020-02-09",
        90.0
      ],
      [
        "2020-02-16",
        86.0
      ],
      [
        "2020-02-23",
        85.0
      ],
      [
        "2020-03-01",
        85.0
      ],
      [
        "2020-03-08",
        91.0
      ],
      [
        "2020-03-15",
        86.0
      ],
      [
        "2020-03-22",
        88.0
      ],
      [
        "2020-03-29",
        61.0
      ],
      [
        "2020-04-05",
        52.0
      ],
      [
        "2020-04-12",
        51.0
      ],
      [
        "2020-04-19",
        51.0
      ],
      [
        "2020-04-26",
        48.0
      ],
      [
        "2020-05-03",
        51.0
      ],
      [
        "2020-05-10",
        56.0
      ],
      [
        "2020-05-17",
        55.0
      ],
      [
        "2020-05-24",
        62.0
      ],
      [
        "2020-05-31",
        57.0
      ],
      [
        "2020-06-07",
        57.0
      ],
      [
        "2020-06-14",
        62.0
      ],
      [
        "2020-06-21",
        64.0
      ],
      [
        "2020-06-28",
        68.0
      ],
      [
        "2020-07-05",
        71.0
      ],
      [
        "2020-07-12",
        75.0
      ],
      [
        "2020-07-19",
        72.0
      ],
      [
        "2020-07-26",
        73.0
      ],
      [
        "2020-08-02",
        75.0
      ],
      [
        "2020-08-09",
        75.0
      ],
      [
        "2020-08-16",
        79.0
      ],
      [
        "2020-08-23",
        76.0
      ],
      [
        "2020-08-30",
        81.0
      ],
      [
        "2020-09-06",
        92.0
      ],
      [
        "2020-09-13",
        92.0
      ],
      [
        "2020-09-20",
        81.0
      ],
      [
        "2020-09-27",
        75.0
      ],
      [
        "2020-10-04",
        77.0
      ]
    ],
  days7_grouped_phys: [
    ["Jour", "ostéopathe", "kiné"],
    [
      "Lundi",
      1121.0,
      875.0
    ],
    [
      "Mardi",
      1002.0,
      844.0
    ],
    [
      "Mercredi",
      985.0,
      807.0
    ],
    [
      "Jeudi",
      990.0,
      806.0
    ],
    [
      "Vendredi",
      951.0,
      723.0
    ],
    [
      "Samedi",
      680.0,
      399.0
    ],
    [
      "Dimanche",
      580.0,
      364.0
    ]
  ]
}


createLineChart("linechart-7d-phys", article_data.days7_phys, hourFormat, "hours", "Heures", "Popularité", chartSize)
createLineChart("linechart-7d-med", article_data.days7_med, hourFormat, "hours", "Heures", "Popularité", chartSize)

createLineChart("linechart-90d-phys", article_data.days90_phys, dayFormat, "days", "Jours", "Popularité", chartSize)
createLineChart("linechart-90d-med", article_data.days90_med, dayFormat, "days", "Jours", "Popularité", chartSize)

createLineChart("linechart-5y-phys", article_data.years5_phys, yearFormat, "", "Date", "Popularité", chartSize)
createLineChart("linechart-5y-med", article_data.years5_med, yearFormat, "", "Date", "Popularité", chartSize)
createBarChart("barchart-7d-phys", article_data.days7_grouped_phys, chartSize)
